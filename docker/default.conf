server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API routes (proxy to backend in production)
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # In production, proxy to backend service
        # proxy_pass http://backend-service:3000;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        
        # For development, return mock responses
        try_files $uri $uri/ @api_fallback;
    }

    # Handle API fallback for development
    location @api_fallback {
        return 200 '{"status": "development", "message": "API endpoint would be handled by backend service"}';
        add_header Content-Type application/json;
    }

    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Enable CORS for fonts and assets
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
    }

    # HTML files with short cache
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Main application routes
    location / {
        limit_req zone=web burst=10 nodelay;
        try_files $uri $uri/ $uri.html /index.html;
        
        # Security headers for HTML pages
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    # Admin routes
    location /admin/ {
        try_files $uri $uri/ $uri.html /admin/admin-dashboard.html;
    }

    # Seller routes
    location /sellers/ {
        try_files $uri $uri/ $uri.html /sellers/vendor-dashboard.html;
    }

    # Pages routes
    location /pages/ {
        try_files $uri $uri/ $uri.html /index.html;
    }

    # Enterprise dashboard
    location /enterprise {
        try_files $uri /admin/enterprise-dashboard.html;
    }

    # Mobile app files
    location /mobile/ {
        expires 1h;
        try_files $uri $uri/ @mobile_fallback;
    }

    location @mobile_fallback {
        return 200 '{"message": "Mobile app build not available"}';
        add_header Content-Type application/json;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(sql|md|txt|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;

    location = /404.html {
        internal;
    }

    location = /500.html {
        internal;
    }
}